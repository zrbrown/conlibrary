package com.geekway.conlibrary.db.entity;
// Generated Jul 13, 2023, 12:10:19â€¯AM by Hibernate Tools 6.2.6.Final


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import java.util.HashSet;
import java.util.Set;
import org.hibernate.annotations.GenericGenerator;

/**
 * Attendee generated by hbm2java
 */
@Entity
@Table(name="attendees"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames={"badge_id", "event_id"}) 
)
public class Attendee  implements java.io.Serializable {


     private Long id;
     private Event event;
     private String firstName;
     private String lastName;
     private String pronouns;
     private String badgeId;
     private Set<Play> plays = new HashSet<Play>(0);
     private Set<Checkout> checkouts = new HashSet<Checkout>(0);

    public Attendee() {
    }

    public Attendee(Event event, String firstName, String lastName, String pronouns, String badgeId, Set<Play> plays, Set<Checkout> checkouts) {
       this.event = event;
       this.firstName = firstName;
       this.lastName = lastName;
       this.pronouns = pronouns;
       this.badgeId = badgeId;
       this.plays = plays;
       this.checkouts = checkouts;
    }
   
     @GenericGenerator(name="com.geekway.conlibrary.db.entity.AttendeeIdGenerator", strategy="org.hibernate.id.IdentityGenerator")@Id @GeneratedValue(generator="com.geekway.conlibrary.db.entity.AttendeeIdGenerator")

    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="event_id", nullable=false)
    public Event getEvent() {
        return this.event;
    }
    
    public void setEvent(Event event) {
        this.event = event;
    }

    
    @Column(name="first_name", nullable=false)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="last_name")
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="pronouns", nullable=false)
    public String getPronouns() {
        return this.pronouns;
    }
    
    public void setPronouns(String pronouns) {
        this.pronouns = pronouns;
    }

    
    @Column(name="badge_id", nullable=false)
    public String getBadgeId() {
        return this.badgeId;
    }
    
    public void setBadgeId(String badgeId) {
        this.badgeId = badgeId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="attendee")
    public Set<Play> getPlays() {
        return this.plays;
    }
    
    public void setPlays(Set<Play> plays) {
        this.plays = plays;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="attendee")
    public Set<Checkout> getCheckouts() {
        return this.checkouts;
    }
    
    public void setCheckouts(Set<Checkout> checkouts) {
        this.checkouts = checkouts;
    }




}


